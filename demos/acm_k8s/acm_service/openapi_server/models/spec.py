from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.managed_cluster_client_config import (
    ManagedClusterClientConfig,
)
from openapi_server import util

from openapi_server.models.managed_cluster_client_config import (
    ManagedClusterClientConfig,
)  # noqa: E501


class Spec(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(
        self, hub_accepts_client=None, managed_cluster_client_configs=None
    ):  # noqa: E501
        """Spec - a model defined in OpenAPI

        :param hub_accepts_client: The hub_accepts_client of this Spec.  # noqa: E501
        :type hub_accepts_client: bool
        :param managed_cluster_client_configs: The managed_cluster_client_configs of this Spec.  # noqa: E501
        :type managed_cluster_client_configs: List[ManagedClusterClientConfig]
        """
        self.openapi_types = {
            "hub_accepts_client": bool,
            "managed_cluster_client_configs": List[ManagedClusterClientConfig],
        }

        self.attribute_map = {
            "hub_accepts_client": "hubAcceptsClient",
            "managed_cluster_client_configs": "managedClusterClientConfigs",
        }

        self._hub_accepts_client = hub_accepts_client
        self._managed_cluster_client_configs = managed_cluster_client_configs

    @classmethod
    def from_dict(cls, dikt) -> "Spec":
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Spec of this Spec.  # noqa: E501
        :rtype: Spec
        """
        return util.deserialize_model(dikt, cls)

    @property
    def hub_accepts_client(self) -> bool:
        """Gets the hub_accepts_client of this Spec.


        :return: The hub_accepts_client of this Spec.
        :rtype: bool
        """
        return self._hub_accepts_client

    @hub_accepts_client.setter
    def hub_accepts_client(self, hub_accepts_client: bool):
        """Sets the hub_accepts_client of this Spec.


        :param hub_accepts_client: The hub_accepts_client of this Spec.
        :type hub_accepts_client: bool
        """

        self._hub_accepts_client = hub_accepts_client

    @property
    def managed_cluster_client_configs(self) -> List[ManagedClusterClientConfig]:
        """Gets the managed_cluster_client_configs of this Spec.


        :return: The managed_cluster_client_configs of this Spec.
        :rtype: List[ManagedClusterClientConfig]
        """
        return self._managed_cluster_client_configs

    @managed_cluster_client_configs.setter
    def managed_cluster_client_configs(
        self, managed_cluster_client_configs: List[ManagedClusterClientConfig]
    ):
        """Sets the managed_cluster_client_configs of this Spec.


        :param managed_cluster_client_configs: The managed_cluster_client_configs of this Spec.
        :type managed_cluster_client_configs: List[ManagedClusterClientConfig]
        """

        self._managed_cluster_client_configs = managed_cluster_client_configs
